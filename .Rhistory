num_courses <- sample(3:6, students, replace = TRUE)
# Create an empty data frame
data <- data.frame(Student_ID = integer(), Program = character(), Course = character(), stringsAsFactors = FALSE)
# Populate the data frame
for (i in 1:students) {
selected_program <- student_programs[i]
available_courses <- switch(selected_program,
"BSCSC" = courses_BSCSC,
"BSMET" = courses_BSMET,
"BSMTH" = courses_BSMTH,
"BBA" = courses_BBA,
"BSDSC" = courses_BSDSC,
"BSECO" = courses_BSECO,
"BSCIS" = courses_BSCIS)
assigned_courses <- sample(available_courses, num_courses[i], replace = FALSE)
student_data <- data.frame(Student_ID = rep(i, num_courses[i]), Program = rep(selected_program, num_courses[i]), Course = assigned_courses, stringsAsFactors = FALSE)
data <- rbind(data, student_data)
}
# View the first few rows of the dataset
data
df_student <- data
df_student <- data
df_student
# Generate student-course transactions from the real course list
set.seed(42)
student_courses <- lapply(1:students, function(x) {
sample(available_courses, sample(3:6, 1))  # Randomly pick 3 to 6 courses per student
})
```
# Convert list to transactions
library(arules)
transactions <- as(df_student, "transactions")
# View example transactions
inspect(transactions[1:5])
# Load necessary library
library(arules)
# Convert student-course data to transactions format
transactions <- as(split(df_student$Course, data$Student_ID), "transactions")
# View example transactions
inspect(transactions[1:5])
# Load necessary library
# Load necessary library
library(dplyr)
# Define the number of students
students <- 1000
# Define course lists for each program
# Bachelor of Science in Computer Science (BSCSC)
courses_BSCSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Calculus II", "Calculus III", "Principles of Computer Science", "Intro to Linear Algebra", "Electronics",
"Principles of Computer Programming", "Computer Organization & Programming", "Operating Systems & Networking",
"Data Structures", "Computer Architecture", "Wireless Network System Administration", "Programming Language Concepts",
"Software Engineering", "Design & Analysis of Algorithms", "Database Systems",
"Platform-Based System Development", "Data Mining", "Information Security", "Artificial Intelligence",
"Web Programming", "Interactive Application Design", "Advanced Network Communication & Security", "Advanced Database Administration"
)
# Bachelor of Science in Mechanical Engineering Technology (BSMET)
courses_BSMET <- c(
"English Composition I", "English Composition II", "Calculus I", "Engineering Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Principles of Chemistry I", "Principles of Computer Science", "Principles of Computer Programming",
"Calculus II", "Calculus III", "Electronics", "Materials & Processes I", "Introduction to Mechanics",
"Fluid Mechanics Application", "Fluid Mechanics Application Lab", "Strength of Materials", "Strength of Materials Lab",
"Applied Thermodynamics", "Engineering Graphics and Computer-Aided Drafting", "Elements of Plant Design", "Dynamics of Mechanisms",
"Auto Manufacturing Systems", "Computer-Aided Design I", "Quality Control Technology", "Materials Technology", "Materials Technology Lab",
"Ethics in Engineering Technology",
"Industrial Work Measurement", "Applications Stress Analysis", "Materials Selection & Management", "Fundamentals of Biomechanics",
"Computer-Aided Design II", "Manufacturing System Control", "Fundamentals of Offshore Systems", "Fundamentals of Pipeline Design",
"Valve Design", "Fundamentals of Drilling Technology", "Downhole Drilling Tools/Technology"
)
# Bachelor of Science in Mathematics (BSMTH)
courses_BSMTH <- c(
"English Composition I", "English Composition II", "Calculus I", "Calculus II", "Calculus III",
"Linear Algebra", "Abstract Algebra", "Real Analysis", "Complex Analysis", "Differential Equations",
"Probability and Statistics", "Numerical Methods", "Topology", "Mathematical Modeling", "Graph Theory",
"Optimization", "History of Mathematics", "Mathematical Logic"
)
# Bachelor of Business Administration (BBA)
courses_BBA <- c(
"English Composition I", "English Composition II", "Principles of Accounting I", "Principles of Accounting II",
"Business Statistics", "Microeconomics", "Macroeconomics", "Business Law", "Marketing Principles",
"Financial Management", "Organizational Behavior", "Strategic Management", "Operations Management",
"Business Ethics", "International Business", "Entrepreneurship", "Human Resource Management",
"Consumer Behavior"
)
# Bachelor of Science in Data Science (BSDSC)
courses_BSDSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Linear Algebra", "Statistics & Probability",
"Introduction to Data Science", "Machine Learning", "Data Visualization", "Big Data Analytics", "Data Mining",
"Cloud Computing", "Artificial Intelligence", "Database Systems", "Programming for Data Science"
)
# Bachelor of Science in Economics (BSECO)
courses_BSECO <- c(
"English Composition I", "English Composition II", "Principles of Microeconomics", "Principles of Macroeconomics",
"Statistics for Economics", "Econometrics", "Public Economics", "International Economics", "Development Economics",
"Behavioral Economics", "Financial Economics", "Economic Policy Analysis"
)
# Bachelor of Science in Cyber Information Security (BSCIS)
courses_BSCIS <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics", "Computer Networks",
"Operating Systems Security", "Cryptography", "Cybersecurity Risk Management", "Ethical Hacking",
"Penetration Testing", "Digital Forensics", "Cloud Security", "Blockchain Security", "Cyber Law & Policy"
)
# Generate student-course transactions
programs <- c("BSCSC", "BSMET", "BSMTH", "BBA", "BSDSC", "BSECO", "BSCIS")
student_programs <- sample(programs, students, replace = TRUE)
# Precompute the number of courses per student
num_courses <- sample(7:16, students, replace = TRUE)
# Create an empty data frame
data <- data.frame(Student_ID = integer(), Program = character(), Course = character(), stringsAsFactors = FALSE)
# Populate the data frame
for (i in 1:students) {
selected_program <- student_programs[i]
available_courses <- switch(selected_program,
"BSCSC" = courses_BSCSC,
"BSMET" = courses_BSMET,
"BSMTH" = courses_BSMTH,
"BBA" = courses_BBA,
"BSDSC" = courses_BSDSC,
"BSECO" = courses_BSECO,
"BSCIS" = courses_BSCIS)
assigned_courses <- sample(available_courses, num_courses[i], replace = FALSE)
student_data <- data.frame(Student_ID = rep(i, num_courses[i]), Program = rep(selected_program, num_courses[i]), Course = assigned_courses, stringsAsFactors = FALSE)
data <- rbind(data, student_data)
}
# Load necessary library
# Load necessary library
library(dplyr)
# Define the number of students
students <- 1000
# Define course lists for each program
# Bachelor of Science in Computer Science (BSCSC)
courses_BSCSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Calculus II", "Calculus III", "Principles of Computer Science", "Intro to Linear Algebra", "Electronics",
"Principles of Computer Programming", "Computer Organization & Programming", "Operating Systems & Networking",
"Data Structures", "Computer Architecture", "Wireless Network System Administration", "Programming Language Concepts",
"Software Engineering", "Design & Analysis of Algorithms", "Database Systems",
"Platform-Based System Development", "Data Mining", "Information Security", "Artificial Intelligence",
"Web Programming", "Interactive Application Design", "Advanced Network Communication & Security", "Advanced Database Administration"
)
# Bachelor of Science in Mechanical Engineering Technology (BSMET)
courses_BSMET <- c(
"English Composition I", "English Composition II", "Calculus I", "Engineering Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Principles of Chemistry I", "Principles of Computer Science", "Principles of Computer Programming",
"Calculus II", "Calculus III", "Electronics", "Materials & Processes I", "Introduction to Mechanics",
"Fluid Mechanics Application", "Fluid Mechanics Application Lab", "Strength of Materials", "Strength of Materials Lab",
"Applied Thermodynamics", "Engineering Graphics and Computer-Aided Drafting", "Elements of Plant Design", "Dynamics of Mechanisms",
"Auto Manufacturing Systems", "Computer-Aided Design I", "Quality Control Technology", "Materials Technology", "Materials Technology Lab",
"Ethics in Engineering Technology",
"Industrial Work Measurement", "Applications Stress Analysis", "Materials Selection & Management", "Fundamentals of Biomechanics",
"Computer-Aided Design II", "Manufacturing System Control", "Fundamentals of Offshore Systems", "Fundamentals of Pipeline Design",
"Valve Design", "Fundamentals of Drilling Technology", "Downhole Drilling Tools/Technology"
)
# Bachelor of Science in Mathematics (BSMTH)
courses_BSMTH <- c(
"English Composition I", "English Composition II", "Calculus I", "Calculus II", "Calculus III",
"Linear Algebra", "Abstract Algebra", "Real Analysis", "Complex Analysis", "Differential Equations",
"Probability and Statistics", "Numerical Methods", "Topology", "Mathematical Modeling", "Graph Theory",
"Optimization", "History of Mathematics", "Mathematical Logic"
)
# Bachelor of Business Administration (BBA)
courses_BBA <- c(
"English Composition I", "English Composition II", "Principles of Accounting I", "Principles of Accounting II",
"Business Statistics", "Microeconomics", "Macroeconomics", "Business Law", "Marketing Principles",
"Financial Management", "Organizational Behavior", "Strategic Management", "Operations Management",
"Business Ethics", "International Business", "Entrepreneurship", "Human Resource Management",
"Consumer Behavior"
)
# Bachelor of Science in Data Science (BSDSC)
courses_BSDSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Linear Algebra", "Statistics & Probability",
"Introduction to Data Science", "Machine Learning", "Data Visualization", "Big Data Analytics", "Data Mining",
"Cloud Computing", "Artificial Intelligence", "Database Systems", "Programming for Data Science"
)
# Bachelor of Science in Economics (BSECO)
courses_BSECO <- c(
"English Composition I", "English Composition II", "Principles of Microeconomics", "Principles of Macroeconomics",
"Statistics for Economics", "Econometrics", "Public Economics", "International Economics", "Development Economics",
"Behavioral Economics", "Financial Economics", "Economic Policy Analysis"
)
# Bachelor of Science in Cyber Information Security (BSCIS)
courses_BSCIS <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics", "Computer Networks",
"Operating Systems Security", "Cryptography", "Cybersecurity Risk Management", "Ethical Hacking",
"Penetration Testing", "Digital Forensics", "Cloud Security", "Blockchain Security", "Cyber Law & Policy"
)
# Generate student-course transactions
programs <- c("BSCSC", "BSMET", "BSMTH", "BBA", "BSDSC", "BSECO", "BSCIS")
student_programs <- sample(programs, students, replace = TRUE)
# Precompute the number of courses per student
num_courses <- sample(5:16, students, replace = TRUE)
# Create an empty data frame
data <- data.frame(Student_ID = integer(), Program = character(), Course = character(), stringsAsFactors = FALSE)
# Populate the data frame
for (i in 1:students) {
selected_program <- student_programs[i]
available_courses <- switch(selected_program,
"BSCSC" = courses_BSCSC,
"BSMET" = courses_BSMET,
"BSMTH" = courses_BSMTH,
"BBA" = courses_BBA,
"BSDSC" = courses_BSDSC,
"BSECO" = courses_BSECO,
"BSCIS" = courses_BSCIS)
assigned_courses <- sample(available_courses, num_courses[i], replace = FALSE)
student_data <- data.frame(Student_ID = rep(i, num_courses[i]), Program = rep(selected_program, num_courses[i]), Course = assigned_courses, stringsAsFactors = FALSE)
data <- rbind(data, student_data)
}
# Load necessary library
library(dplyr)
# Define the number of students
students <- 1000
# Define course lists for each program
# Bachelor of Science in Computer Science (BSCSC)
courses_BSCSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Calculus II", "Calculus III", "Principles of Computer Science", "Intro to Linear Algebra", "Electronics",
"Principles of Computer Programming", "Computer Organization & Programming", "Operating Systems & Networking",
"Data Structures", "Computer Architecture", "Wireless Network System Administration", "Programming Language Concepts",
"Software Engineering", "Design & Analysis of Algorithms", "Database Systems",
"Platform-Based System Development", "Data Mining", "Information Security", "Artificial Intelligence",
"Web Programming", "Interactive Application Design", "Advanced Network Communication & Security", "Advanced Database Administration"
)
# Bachelor of Science in Mechanical Engineering Technology (BSMET)
courses_BSMET <- c(
"English Composition I", "English Composition II", "Calculus I", "Engineering Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Principles of Chemistry I", "Principles of Computer Science", "Principles of Computer Programming",
"Calculus II", "Calculus III", "Electronics", "Materials & Processes I", "Introduction to Mechanics",
"Fluid Mechanics Application", "Fluid Mechanics Application Lab", "Strength of Materials", "Strength of Materials Lab",
"Applied Thermodynamics", "Engineering Graphics and Computer-Aided Drafting", "Elements of Plant Design", "Dynamics of Mechanisms",
"Auto Manufacturing Systems", "Computer-Aided Design I", "Quality Control Technology", "Materials Technology", "Materials Technology Lab",
"Ethics in Engineering Technology",
"Industrial Work Measurement", "Applications Stress Analysis", "Materials Selection & Management", "Fundamentals of Biomechanics",
"Computer-Aided Design II", "Manufacturing System Control", "Fundamentals of Offshore Systems", "Fundamentals of Pipeline Design",
"Valve Design", "Fundamentals of Drilling Technology", "Downhole Drilling Tools/Technology"
)
# Bachelor of Science in Mathematics (BSMTH)
courses_BSMTH <- c(
"English Composition I", "English Composition II", "Calculus I", "Calculus II", "Calculus III",
"Linear Algebra", "Abstract Algebra", "Real Analysis", "Complex Analysis", "Differential Equations",
"Probability and Statistics", "Numerical Methods", "Topology", "Mathematical Modeling", "Graph Theory",
"Optimization", "History of Mathematics", "Mathematical Logic"
)
# Bachelor of Business Administration (BBA)
courses_BBA <- c(
"English Composition I", "English Composition II", "Principles of Accounting I", "Principles of Accounting II",
"Business Statistics", "Microeconomics", "Macroeconomics", "Business Law", "Marketing Principles",
"Financial Management", "Organizational Behavior", "Strategic Management", "Operations Management",
"Business Ethics", "International Business", "Entrepreneurship", "Human Resource Management",
"Consumer Behavior"
)
# Bachelor of Science in Data Science (BSDSC)
courses_BSDSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Linear Algebra", "Statistics & Probability",
"Introduction to Data Science", "Machine Learning", "Data Visualization", "Big Data Analytics", "Data Mining",
"Cloud Computing", "Artificial Intelligence", "Database Systems", "Programming for Data Science"
)
# Bachelor of Science in Economics (BSECO)
courses_BSECO <- c(
"English Composition I", "English Composition II", "Principles of Microeconomics", "Principles of Macroeconomics",
"Statistics for Economics", "Econometrics", "Public Economics", "International Economics", "Development Economics",
"Behavioral Economics", "Financial Economics", "Economic Policy Analysis"
)
# Bachelor of Science in Cyber Information Security (BSCIS)
courses_BSCIS <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics", "Computer Networks",
"Operating Systems Security", "Cryptography", "Cybersecurity Risk Management", "Ethical Hacking",
"Penetration Testing", "Digital Forensics", "Cloud Security", "Blockchain Security", "Cyber Law & Policy"
)
# Generate student-course transactions
programs <- c("BSCSC", "BSMET", "BSMTH", "BBA", "BSDSC", "BSECO", "BSCIS")
student_programs <- sample(programs, students, replace = TRUE)
# Precompute the number of courses per student
num_courses <- sample(5:16, students, replace = TRUE)
# Create an empty list to store student data
student_list <- vector("list", students)
# Populate the data frame efficiently
for (i in 1:students) {
selected_program <- student_programs[i]
# Get the list of courses for the student's program
available_courses <- switch(selected_program,
"BSCSC" = courses_BSCSC,
"BSMET" = courses_BSMET,
"BSMTH" = courses_BSMTH,
"BBA" = courses_BBA,
"BSDSC" = courses_BSDSC,
"BSECO" = courses_BSECO,
"BSCIS" = courses_BSCIS)
# Ensure we do not sample more courses than available
max_courses <- min(num_courses[i], length(available_courses))
assigned_courses <- sample(available_courses, max_courses, replace = FALSE)
# Store data in the list
student_list[[i]] <- data.frame(
Student_ID = rep(i, max_courses),
Program = rep(selected_program, max_courses),
Course = assigned_courses,
stringsAsFactors = FALSE
)
}
# Combine list into a single data frame
data <- do.call(rbind, student_list)
# View the first few rows of the dataset
data
df_student <- data
df_student
# Load necessary library
library(dplyr)
# Define the number of students
students <- 5000
# Define course lists for each program
# Bachelor of Science in Computer Science (BSCSC)
courses_BSCSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Calculus II", "Calculus III", "Principles of Computer Science", "Intro to Linear Algebra", "Electronics",
"Principles of Computer Programming", "Computer Organization & Programming", "Operating Systems & Networking",
"Data Structures", "Computer Architecture", "Wireless Network System Administration", "Programming Language Concepts",
"Software Engineering", "Design & Analysis of Algorithms", "Database Systems",
"Platform-Based System Development", "Data Mining", "Information Security", "Artificial Intelligence",
"Web Programming", "Interactive Application Design", "Advanced Network Communication & Security", "Advanced Database Administration"
)
# Bachelor of Science in Mechanical Engineering Technology (BSMET)
courses_BSMET <- c(
"English Composition I", "English Composition II", "Calculus I", "Engineering Mathematics",
"Principles of Physics I", "Principles of Physics II", "Intro to American Gov’t", "Global Issues",
"Introduction to African & African-American History", "Survey of US History",
"History of Western Art", "Art of Africa/Oceania/Americas", "Contemporary African Art", "Introduction to Theater",
"Technical Communication", "Principles of Chemistry I", "Principles of Computer Science", "Principles of Computer Programming",
"Calculus II", "Calculus III", "Electronics", "Materials & Processes I", "Introduction to Mechanics",
"Fluid Mechanics Application", "Fluid Mechanics Application Lab", "Strength of Materials", "Strength of Materials Lab",
"Applied Thermodynamics", "Engineering Graphics and Computer-Aided Drafting", "Elements of Plant Design", "Dynamics of Mechanisms",
"Auto Manufacturing Systems", "Computer-Aided Design I", "Quality Control Technology", "Materials Technology", "Materials Technology Lab",
"Ethics in Engineering Technology",
"Industrial Work Measurement", "Applications Stress Analysis", "Materials Selection & Management", "Fundamentals of Biomechanics",
"Computer-Aided Design II", "Manufacturing System Control", "Fundamentals of Offshore Systems", "Fundamentals of Pipeline Design",
"Valve Design", "Fundamentals of Drilling Technology", "Downhole Drilling Tools/Technology"
)
# Bachelor of Science in Mathematics (BSMTH)
courses_BSMTH <- c(
"English Composition I", "English Composition II", "Calculus I", "Calculus II", "Calculus III",
"Linear Algebra", "Abstract Algebra", "Real Analysis", "Complex Analysis", "Differential Equations",
"Probability and Statistics", "Numerical Methods", "Topology", "Mathematical Modeling", "Graph Theory",
"Optimization", "History of Mathematics", "Mathematical Logic"
)
# Bachelor of Business Administration (BBA)
courses_BBA <- c(
"English Composition I", "English Composition II", "Principles of Accounting I", "Principles of Accounting II",
"Business Statistics", "Microeconomics", "Macroeconomics", "Business Law", "Marketing Principles",
"Financial Management", "Organizational Behavior", "Strategic Management", "Operations Management",
"Business Ethics", "International Business", "Entrepreneurship", "Human Resource Management",
"Consumer Behavior"
)
# Bachelor of Science in Data Science (BSDSC)
courses_BSDSC <- c(
"English Composition I", "English Composition II", "Calculus I", "Linear Algebra", "Statistics & Probability",
"Introduction to Data Science", "Machine Learning", "Data Visualization", "Big Data Analytics", "Data Mining",
"Cloud Computing", "Artificial Intelligence", "Database Systems", "Programming for Data Science"
)
# Bachelor of Science in Economics (BSECO)
courses_BSECO <- c(
"English Composition I", "English Composition II", "Principles of Microeconomics", "Principles of Macroeconomics",
"Statistics for Economics", "Econometrics", "Public Economics", "International Economics", "Development Economics",
"Behavioral Economics", "Financial Economics", "Economic Policy Analysis"
)
# Bachelor of Science in Cyber Information Security (BSCIS)
courses_BSCIS <- c(
"English Composition I", "English Composition II", "Calculus I", "Discrete Mathematics", "Computer Networks",
"Operating Systems Security", "Cryptography", "Cybersecurity Risk Management", "Ethical Hacking",
"Penetration Testing", "Digital Forensics", "Cloud Security", "Blockchain Security", "Cyber Law & Policy"
)
# Generate student-course transactions
programs <- c("BSCSC", "BSMET", "BSMTH", "BBA", "BSDSC", "BSECO", "BSCIS")
student_programs <- sample(programs, students, replace = TRUE)
# Precompute the number of courses per student
num_courses <- sample(5:16, students, replace = TRUE)
# Create an empty list to store student data
student_list <- vector("list", students)
# Populate the data frame efficiently
for (i in 1:students) {
selected_program <- student_programs[i]
# Get the list of courses for the student's program
available_courses <- switch(selected_program,
"BSCSC" = courses_BSCSC,
"BSMET" = courses_BSMET,
"BSMTH" = courses_BSMTH,
"BBA" = courses_BBA,
"BSDSC" = courses_BSDSC,
"BSECO" = courses_BSECO,
"BSCIS" = courses_BSCIS)
# Ensure we do not sample more courses than available
max_courses <- min(num_courses[i], length(available_courses))
assigned_courses <- sample(available_courses, max_courses, replace = FALSE)
# Store data in the list
student_list[[i]] <- data.frame(
Student_ID = rep(i, max_courses),
Program = rep(selected_program, max_courses),
Course = assigned_courses,
stringsAsFactors = FALSE
)
}
# Combine list into a single data frame
data <- do.call(rbind, student_list)
# View the first few rows of the dataset
data
df_student <- data
df_student
# Load necessary library
library(arules)
# Convert student-course data to transactions format
transactions <- as(split(df_student$Course, data$Student_ID), "transactions")
# View example transactions
inspect(transactions[1:5])
# Load necessary libraries
install.packages("arules")  # Only install if not installed
library(arules)
# Convert student-course data to a list format suitable for transactions
student_list <- split(df_student$Course, df_student$Student_ID)
# Convert to transaction format
transactions <- as(student_list, "transactions")
# View sample transactions
inspect(transactions[1:5])
# Apply the Apriori algorithm to find association rules
rules <- apriori(transactions, parameter = list(supp = 0.05, conf = 0.6, target = "rules"))
# Inspect top rules (sorted by confidence)
inspect(sort(rules, by = "confidence")[1:10])
# Generate Recommendations for a student who took specific courses
student_courses_taken <- c("Calculus I", "Linear Algebra")  # Example input
# Find matching rules where selected courses appear in the LHS
matching_rules <- subset(rules, lhs %in% student_courses_taken)
# Extract recommended courses from the RHS of the rules
recommendations <- unique(rhs(matching_rules))
# Display recommended courses
print(as(recommendations, "list"))
print(as(recommendations, "list"))
# Generate Recommendations for a student who took specific courses
student_courses_taken <- c("English Composition I", "English Composition II", "Principles of Microeconomics", "Principles of Macroeconomics",
"Statistics for Economics")  # Example input
# Generate Recommendations for a student who took specific courses
student_courses_taken <- c("English Composition I", "English Composition II", "Principles of Microeconomics", "Principles of Macroeconomics",
"Statistics for Economics")  # Example input
# Find matching rules where selected courses appear in the LHS
matching_rules <- subset(rules, lhs %in% student_courses_taken)
# Extract recommended courses from the RHS of the rules
recommendations <- unique(rhs(matching_rules))
# Display recommended courses
print(as(recommendations, "list"))
# Save the model (association rules) to a file
saveRDS(rules, "apriori_model.rds")
# Save the model (association rules) to a file
saveRDS(rules, "apriori_model.rds")
write.csv(as(recommendations, "list"), "recommendations.csv", row.names = FALSE)
saveRDS(transactions, "student_transactions.rds")
install.packages("plumber")
library(plumber)
r$run(port = 8001)
plumber::pr_run(port = 8000, host = "0.0.0.0")
plumber::plumb(file='IUGB/R_Programming_for_Data_Science/project/api.R')$run()
plumb(file='IUGB/R_Programming_for_Data_Science/project/api.R')$run()
plumb(file='IUGB/R_Programming_for_Data_Science/project/recommend_api.R')$run()
plumb(file='IUGB/R_Programming_for_Data_Science/project/recommend_api.R')$run()
plumb(file='IUGB/R_Programming_for_Data_Science/project/api.R')$run()
plumb(file='IUGB/R_Programming_for_Data_Science/project/api.R')$run()
# Start the API
pr <- plumb("recommend_api.R")
# Start the API
pr <- plumb("C:\Users\DELL\Documents\IUGB\R_Programming_for_Data_Science\project\recommend_api.R")
# Start the API
pr <- plumb("C:/Users/DELL/Documents/IUGB/R_Programming_for_Data_Science/project/recommend_api.R")
pr$run(port = 8000, host = "0.0.0.0")
pr$run(port = 8001, host = "0.0.0.0")
pr$run(port = 8001, host = "0.0.0.0")
# Start the API
pr <- plumb("C:/Users/DELL/Documents/IUGB/R_Programming_for_Data_Science/project/recommend_api.R")
pr$run(port = 8001, host = "0.0.0.0")
pr$run(port = 8000, host = "0.0.0.0")
pr$run(port = 8000, host = "0.0.0.0")
pr$run(port = 8000, host = "0.0.0.0")
install.packages("dplyr")
pr$run(port = 8000, host = "0.0.0.0")
pr$run(port = 8000, host = "0.0.0.0")
install.packages("dplyr")
install.packages("dplyr")
install.packages("magrittr")
install.packages("magrittr")
pr$run(port = 8000, host = "0.0.0.0")
pr$run(port = 8000, host = "0.0.0.0")
pr$run(port = 8000, host = "0.0.0.0")
pr$run(port = 8000, host = "0.0.0.0")  # Allow external connections
# run_api.R
library(plumber)
pr <- plumb("C:/Users/DELL/Documents/IUGB/R_Programming_for_Data_Science/project/second_api.R")
pr$run(port = 8000, host = "0.0.0.0")  # Allow external connections
